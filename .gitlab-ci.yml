stages:
  - build
  - test
  - deploy

variables:
  PROJECT: ci-ec-auth

build:
  stage: build
  script:
    - docker build -t $PROJECT .

lint:
  stage: test
  script:
    - docker run -l $PROJECT $PROJECT sh -c "npm run ci-lint"
    - docker container prune --filter label=$PROJECT -f

test:
  stage: test
  script:
    - docker run -l $PROJECT $PROJECT sh -c "npm run ci-test"
    - docker container prune --filter label=$PROJECT -f

cleanup:
  stage: test
  script:
    - docker rmi $PROJECT
    - docker image prune -f
  needs: ["lint", "test"]

deployDocker:
  stage: deploy
  only:
      - production
  before_script:
    - docker login -u $CI_REGISTRY_USER -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA" -t $CI_REGISTRY_IMAGE:latest .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
    - docker push "$CI_REGISTRY_IMAGE:latest"
    - docker rmi "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
    - docker image prune -f
  after_script:
    - docker logout

deployK8s:
  stage: deploy
  only:
      - production
  script:
    - microk8s kubectl apply -f ./k8s/mysql-deploy.yaml
    - microk8s kubectl apply -f ./k8s/node-deploy.yaml
    - microk8s kubectl rollout restart deployment ec-auth-deployment
    - docker container prune -f
    - docker image prune -f
  needs: ["deployDocker"]
