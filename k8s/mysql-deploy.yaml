apiVersion: v1
kind: PersistentVolume
metadata:
  name: ec-auth-mysql-pv
  labels:
    type: local
  finalizers: null
spec:
  storageClassName: standard
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ec-auth-mysql-pv-claim
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ec-auth-mysql
spec:
  selector:
    matchLabels:
      app: ec-auth-mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: ec-auth-mysql
    spec:
      containers:
        - image: mysql:8.0
          name: ec-auth-mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: root
            - name: MYSQL_DATABASE
              value: ec_auth_db
            - name: MYSQL_USER
              value: joey
            - name: MYSQL_PASSWORD
              value: root
          ports:
            - containerPort: 3306
              name: ec-auth-mysql
          volumeMounts:
            - name: ec-auth-mysql-persistent-storage
              mountPath: /var/lib/mysql-ec-auth
            - name: ec-auth-db-configmap
              mountPath: /docker-entrypoint-initdb.d


      volumes:
        - name: ec-auth-mysql-persistent-storage
          persistentVolumeClaim:
            claimName: ec-auth-mysql-pv-claim
        - name: ec-auth-db-configmap
          configMap:
            name: ec-auth-db-configmap

---

apiVersion: v1
kind: Service
metadata:
  name: ec-auth-mysql
spec:
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
      nodePort: 31000
  type: LoadBalancer
  selector:
    app: ec-auth-mysql

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: ec-auth-db-configmap
data: 
  mysql_auth.sql: |-
    CREATE TABLE IF NOT EXISTS auth(
      auth_id int(10) NOT NULL AUTO_INCREMENT,
      uuid varchar(255) NOT NULL,
      email varchar(255) NOT NULL,
      password varchar(255) NOT NULL,
      PRIMARY KEY(auth_id)
    );

    CREATE TABLE IF NOT EXISTS user(
      user_id int(10) NOT NULL AUTO_INCREMENT,
      auth_id int(10) NOT NULL,
      user_uuid varchar(255) NOT NULL,
      firstname varchar(255) NOT NULL,
      lastname varchar(255) NOT NULL,
      street varchar(255) NOT NULL,
      city varchar(255) NOT NULL,
      province varchar(255) NOT NULL,
      country varchar(255) NOT NULL,
      PRIMARY KEY(user_id)
    );

    CREATE TABLE IF NOT EXISTS role(
      role_id int(10) NOT NULL AUTO_INCREMENT,
      name varchar(255) NOT NULL UNIQUE,
      PRIMARY KEY(role_id)
    );

    CREATE TABLE IF NOT EXISTS user_role(
      user_role_id int(10) NOT NULL AUTO_INCREMENT,
      user_id int(10) NOT NULL,
      role_id int(10) NOT NULL,
      PRIMARY KEY(user_role_id)
    );


